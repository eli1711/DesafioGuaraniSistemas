# =============================== #
# APP
# =============================== #
spring.application.name=sistema-vendas
server.port=8090

# =============================== #
# DATASOURCE - PostgreSQL local/Docker
# =============================== #
spring.datasource.url=jdbc:postgresql://localhost:5432/sistema_vendas
spring.datasource.username=usuario
spring.datasource.password=senha123
spring.datasource.driver-class-name=org.postgresql.Driver

# Pool Hikari
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.connection-timeout=30000

# =============================== #
# JPA / HIBERNATE
# =============================== #
# Para DEV, deixe update (cria/altera tabelas conforme entidades)
spring.jpa.hibernate.ddl-auto=update
# Se já tiver migrações Flyway e quiser usá-las, troque para "validate"
# spring.jpa.hibernate.ddl-auto=validate

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# Esta linha é opcional; o Hibernate detecta automático. Pode manter.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.default_schema=public

# Evita execução automática de scripts schema.sql/data.sql
spring.sql.init.mode=never

# =============================== #
# FLYWAY (DESLIGUE se não tiver scripts)
# =============================== #
spring.flyway.enabled=false
# Se você tiver scripts em src/main/resources/db/migration,
# ligue e aponte o local:
# spring.flyway.enabled=true
# spring.flyway.locations=classpath:db/migration
# spring.flyway.baseline-on-migrate=true
# spring.flyway.baseline-version=1

# =============================== #
# LOGS
# =============================== #
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.orm.jdbc.bind=TRACE

# =============================== #
# THYMELEAF
# =============================== #
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.cache=false
